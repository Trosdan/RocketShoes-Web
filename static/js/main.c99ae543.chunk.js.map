{"version":3,"sources":["styles/global.js","components/Header/styles.js","components/Header/index.js","routes.js","services/history.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","serviceWorker.js","index.js","store/modules/cart/actions.js","services/api.js","utils/format.js","assets/images/background.svg","assets/images/logo.svg"],"names":["createGlobalStyle","_templateObject","background","Container","styled","header","styles_templateObject","Cart","Link","_templateObject2","Header","cartSize","useSelector","state","cart","length","react_default","a","createElement","react_router_dom","to","src","logo","alt","index_esm","size","color","Home","React","lazy","Promise","all","__webpack_require__","e","then","bind","Routes","react_router","react","fallback","path","exact","component","routes_Cart","history","createBrowserHistory","combineReducers","arguments","undefined","action","type","produce","draft","product","push","productIndex","findIndex","p","id","splice","amount","Number","addToCart","updateAmount","_ref","productExists","stock","stockAmount","currentAmount","response","data","regenerator_default","wrap","_context","prev","next","select","find","sent","call","api","get","concat","toast","error","abrupt","put","updateAmountSuccess","Object","objectSpread2","priceFormatted","formatPrice","price","addToCartSucess","stop","_marked","_ref2","_context2","_marked2","takeLatest","rootSaga","rootSaga_marked","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","App","es","global","react_toastify","autoClose","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","Service-Worker","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","addToCartRequest","removeFromCart","updateAmountRequest","reset","d","__webpack_exports__","axios__WEBPACK_IMPORTED_MODULE_0__","n","axios","create","baseURL","REACT_APP_API","Intl","NumberFormat","style","currency","format","module","exports"],"mappings":"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","file":"static/js/main.c99ae543.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport background from '../assets/images/background.svg';\r\n\r\nexport default createGlobalStyle`\r\n\r\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: #191920 url(${background}) no-repeat center top;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font: 14px Roboto, sans-serif;\r\n  }\r\n\r\n  #root {\r\n    max-width: 1020px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 50px;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 50px 0;\r\n`;\r\n\r\nexport const Cart = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  transition: opacity 0.2s;\r\n\r\n  &hover {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  div {\r\n    text-align: right;\r\n    margin-right: 10px;\r\n\r\n    strong {\r\n      display: block;\r\n      color: #fff;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #999;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { MdShoppingBasket } from 'react-icons/md';\r\nimport { Container, Cart } from './styles';\r\n\r\nimport logo from '../../assets/images/logo.svg';\r\n\r\nexport default function Header() {\r\n  const cartSize = useSelector(state => state.cart.length);\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"RocketShoes\" />\r\n      </Link>\r\n\r\n      <Cart to=\"/cart\">\r\n        <div>\r\n          <strong>Meu carrinho</strong>\r\n          <span>{cartSize} itens</span>\r\n        </div>\r\n        <MdShoppingBasket size={36} color=\"#fff\" />\r\n      </Cart>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nconst Home = React.lazy(() => import('./pages/Home'));\nconst Cart = React.lazy(() => import('./pages/Cart'));\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Route path=\"/\" exact component={<Home />} />\n        <Route path=\"/cart\" exact component={<Cart />} />\n      </Suspense>\n    </Switch>\n  );\n}\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport cart from './cart/reducer';\r\n\r\nexport default combineReducers({\r\n  cart,\r\n});\r\n","import produce from 'immer';\r\n\r\nexport default function cart(state = [], action) {\r\n  switch (action.type) {\r\n    case '@cart/ADD_SUCCESS':\r\n      return produce(state, draft => {\r\n        const { product } = action;\r\n        draft.push(product);\r\n      });\r\n    case '@cart/REMOVE':\r\n      return produce(state, draft => {\r\n        const productIndex = draft.findIndex(p => p.id === action.id);\r\n\r\n        if (productIndex >= 0) {\r\n          draft.splice(productIndex, 1);\r\n        }\r\n      });\r\n    case '@cart/UPDATE_AMOUNT_SUCCESS': {\r\n      return produce(state, draft => {\r\n        const productIndex = draft.findIndex(p => p.id === action.id);\r\n\r\n        if (productIndex >= 0) {\r\n          draft[productIndex].amount = Number(action.amount);\r\n        }\r\n      });\r\n    }\r\n    case '@cart/RESET': {\r\n      return [];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nimport api from '../../../services/api';\r\nimport history from '../../../services/history';\r\nimport { formatPrice } from '../../../utils/format';\r\n\r\nimport { addToCartSucess, updateAmountSuccess } from './actions';\r\n\r\nfunction* addToCart({ id }) {\r\n  const productExists = yield select(state =>\r\n    state.cart.find(p => p.id === id)\r\n  );\r\n\r\n  const stock = yield call(api.get, `/stock/${id}`);\r\n\r\n  const stockAmount = stock.data.amount;\r\n  const currentAmount = productExists ? productExists.amount : 0;\r\n\r\n  const amount = currentAmount + 1;\r\n\r\n  if (amount > stockAmount) {\r\n    toast.error('Quantidade solicitada fora de estoque');\r\n    return;\r\n  }\r\n\r\n  if (productExists) {\r\n    yield put(updateAmountSuccess(id, amount));\r\n  } else {\r\n    const response = yield call(api.get, `/products/${id}`);\r\n\r\n    const data = {\r\n      ...response.data,\r\n      amount: 1,\r\n      priceFormatted: formatPrice(response.data.price),\r\n    };\r\n\r\n    yield put(addToCartSucess(data));\r\n    history.push('/cart');\r\n  }\r\n}\r\n\r\nfunction* updateAmount({ id, amount }) {\r\n  if (amount <= 0) return;\r\n\r\n  const stock = yield call(api.get, `/stock/${id}`);\r\n  const stockAmount = stock.data.amount;\r\n\r\n  if (amount > stockAmount) {\r\n    toast.error('Quantidade solicitada fora de estoque');\r\n    return;\r\n  }\r\n\r\n  yield put(updateAmountSuccess(id, amount));\r\n}\r\n\r\nexport default all([\r\n  takeLatest('@cart/ADD_REQUEST', addToCart),\r\n  takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\r\n]);\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport cart from './cart/sagas';\r\n\r\nexport default function* rootSaga() {\r\n  return yield all([cart]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './modules/rootReducer';\r\nimport rootSaga from './modules/rootSaga';\r\n\r\nconst sagaMonitor =\r\n  process.env.NODE_ENV === 'development'\r\n    ? console.tron.createSagaMonitor()\r\n    : null;\r\n\r\nconst sagaMiddleware = createSagaMiddleware({\r\n  sagaMonitor,\r\n});\r\n\r\nconst enhancer =\r\n  process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        console.tron.createEnhancer(),\r\n        applyMiddleware(sagaMiddleware)\r\n      )\r\n    : applyMiddleware(sagaMiddleware);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport './config/ReactotronConfig';\r\n\r\nimport GlobalStyle from './styles/global';\r\nimport Header from './components/Header';\r\nimport Routes from './routes';\r\n\r\nimport history from './services/history';\r\nimport store from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <Header />\r\n        <Routes />\r\n        <GlobalStyle />\r\n        <ToastContainer autoClose={3000} />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","export function addToCartRequest(id) {\r\n  return {\r\n    type: '@cart/ADD_REQUEST',\r\n    id,\r\n  };\r\n}\r\n\r\nexport function addToCartSucess(product) {\r\n  return {\r\n    type: '@cart/ADD_SUCCESS',\r\n    product,\r\n  };\r\n}\r\n\r\nexport function removeFromCart(id) {\r\n  return {\r\n    type: '@cart/REMOVE',\r\n    id,\r\n  };\r\n}\r\n\r\nexport function updateAmountRequest(id, amount) {\r\n  return {\r\n    type: '@cart/UPDATE_AMOUNT_REQUEST',\r\n    id,\r\n    amount,\r\n  };\r\n}\r\n\r\nexport function updateAmountSuccess(id, amount) {\r\n  return {\r\n    type: '@cart/UPDATE_AMOUNT_SUCCESS',\r\n    id,\r\n    amount,\r\n  };\r\n}\r\n\r\nexport function reset() {\r\n  return {\r\n    type: '@cart/RESET',\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API,\r\n});\r\n\r\nexport default api;\r\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-BR', {\r\n  style: 'currency',\r\n  currency: 'BRL',\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/background.e2a67d05.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b89c2555.svg\";"],"sourceRoot":""}