{"version":3,"sources":["pages/Home/styles.js","pages/Home/index.js"],"names":["ProductList","styled","ul","_templateObject","darken","Home","_useState","useState","_useState2","Object","slicedToArray","products","setProducts","amount","useSelector","state","cart","reduce","sumAmount","product","id","dispath","useDispatch","useEffect","response","data","regenerator_default","a","async","_context","prev","next","awrap","api","get","sent","map","objectSpread2","priceFormatted","formatPrice","price","stop","loadProducts","react_default","createElement","key","src","image","alt","title","type","onClick","CartActions","index_esm","size","color"],"mappings":"k6CAGO,IAAMA,EAAcC,IAAOC,GAAVC,IA4CFC,YAAO,IAAM,YCrCpB,SAASC,IAAO,IAAAC,EACGC,mBAAS,IADZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtBK,EADsBH,EAAA,GACZI,EADYJ,EAAA,GAEvBK,EAASC,YAAY,SAAAC,GAAK,OAC9BA,EAAMC,KAAKC,OAAO,SAACC,EAAWC,GAG5B,OAFAD,EAAUC,EAAQC,IAAMD,EAAQN,OAEzBK,GACN,MAGCG,EAAUC,cAoBhB,OAlBAC,oBAAU,YACR,eAAAC,EAAAC,EAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MACyBC,IAAIC,IAAI,aADjC,OACQV,EADRK,EAAAM,KAGQV,EAAOD,EAASC,KAAKW,IAAI,SAAAjB,GAAO,OAAAV,OAAA4B,EAAA,EAAA5B,CAAA,GACjCU,EADiC,CAEpCmB,eAAgBC,YAAYpB,EAAQqB,WAGtC5B,EAAYa,GARd,wBAAAI,EAAAY,UAUAC,IACC,IAODC,EAAAhB,EAAAiB,cAAC5C,EAAD,KACGW,EAASyB,IAAI,SAAAjB,GAAO,OACnBwB,EAAAhB,EAAAiB,cAAA,MAAIC,IAAK1B,EAAQC,IACfuB,EAAAhB,EAAAiB,cAAA,OAAKE,IAAK3B,EAAQ4B,MAAOC,IAAK7B,EAAQ8B,QACtCN,EAAAhB,EAAAiB,cAAA,cAASzB,EAAQ8B,OACjBN,EAAAhB,EAAAiB,cAAA,YAAOzB,EAAQmB,gBAEfK,EAAAhB,EAAAiB,cAAA,UAAQM,KAAK,SAASC,QAAS,kBAZb/B,EAYoCD,EAAQC,QAXpEC,EAAQ+B,IAA6BhC,IADvC,IAA0BA,IAahBuB,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAACS,EAAA,EAAD,CAAmBC,KAAM,GAAIC,MAAM,SAAU,IAC5C1C,EAAOM,EAAQC,KAAO,GAGzBuB,EAAAhB,EAAAiB,cAAA","file":"static/js/6.8ee78a0b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport const ProductList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 20px;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n\r\n    img {\r\n      align-self: center;\r\n      max-width: 250px;\r\n    }\r\n\r\n    > strong {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      color: #333;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    > span {\r\n      font-size: 21px;\r\n      font-weight: bold;\r\n      margin: 5px 0 20px;\r\n    }\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-top: auto;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.03, '#7159c1')};\r\n      }\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n\r\n        svg {\r\n          margin-right: 5px;\r\n        }\r\n      }\r\n\r\n      span {\r\n        flex: 1;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MdAddShoppingCart } from 'react-icons/md';\r\nimport { formatPrice } from '../../utils/format';\r\nimport api from '../../services/api';\r\n\r\nimport * as CartActions from '../../store/modules/cart/actions';\r\n\r\nimport { ProductList } from './styles';\r\n\r\nexport default function Home() {\r\n  const [products, setProducts] = useState([]);\r\n  const amount = useSelector(state =>\r\n    state.cart.reduce((sumAmount, product) => {\r\n      sumAmount[product.id] = product.amount;\r\n\r\n      return sumAmount;\r\n    }, {})\r\n  );\r\n\r\n  const dispath = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function loadProducts() {\r\n      const response = await api.get('products');\r\n\r\n      const data = response.data.map(product => ({\r\n        ...product,\r\n        priceFormatted: formatPrice(product.price),\r\n      }));\r\n\r\n      setProducts(data);\r\n    }\r\n    loadProducts();\r\n  }, []);\r\n\r\n  function handleAddProduct(id) {\r\n    dispath(CartActions.addToCartRequest(id));\r\n  }\r\n\r\n  return (\r\n    <ProductList>\r\n      {products.map(product => (\r\n        <li key={product.id}>\r\n          <img src={product.image} alt={product.title} />\r\n          <strong>{product.title}</strong>\r\n          <span>{product.priceFormatted}</span>\r\n\r\n          <button type=\"button\" onClick={() => handleAddProduct(product.id)}>\r\n            <div>\r\n              <MdAddShoppingCart size={16} color=\"#FFF\" />{' '}\r\n              {amount[product.id] || 0}\r\n            </div>\r\n\r\n            <span>ADICIONAR AO CARRINHO</span>\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ProductList>\r\n  );\r\n}\r\n"],"sourceRoot":""}